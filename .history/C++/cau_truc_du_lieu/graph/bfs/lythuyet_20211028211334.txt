Để ý rằng, với thuật toán tìm kiếm theo chiều sâu, đỉnh thăm càng muộn sẽ trở
thành đỉnh sớm được duyệt xong. Đó là kết quả tất yếu vì các đỉnh thăm được nạp vào 
stack trong thủ tục đệ qui. Khác với thuật toán tìm kiếm theo chiều sâu, thuật toán tìm
kiếm theo chiều rộng thay thế việc sử dụng stack bằng hàng đợi (queue). Trong thủ tục
này, đỉnh được nạp vào hàng đợi đầu tiên là u, các đỉnh kề với u là ( v1, v2, . . ., vk) được
nạp vào hàng đợi nếu như nó chưa được xét đến. Quá trình duyệt tiếp theo được bắt đầu
từ các đỉnh còn có mặt trong hàng đợi.
Để ghi nhận trạng thái duyệt các đỉnh của đồ thị, ta cũng vẫn sử dụng mảng
chuaxet[] gồm n phần tử thiết lập giá trị ban đầu là TRUE. Nếu đỉnh u của đồ thị đã được
duyệt, giá trị chuaxet[u] sẽ nhận giá trị FALSE. Thuật toán dừng khi hàng đợi rỗng.
Hình 6.7. dưới đây mô tả chi tiết thuật toán BFS(u).
Biểu diễn thuật toán:
Hình 6.7. Thuật toán BFS(u).
Độ phức tạp tính toán:
Độ phức tạp thuật toán BFS(u) phụ thuộc vào phương pháp biểu diễn đồ thị. Độ
phức tạp thuật toán BFS(u) theo các dạng biểu diễn đồ thị như sau:
 Độ phức tạp thuật toán là O(n2
) trong trường hợp đồ thị biểu diễn dưới dạng
ma trận kề, với n là số đỉnh của đồ thị.
 Độ phức tạp thuật toán là O(n.m) trong trường hợp đồ thị biểu diễn dưới dạng
danh sách cạnh, với n là số đỉnh của đồ thị, m là số cạnh của đồ thị.
Độ phức tạp thuật toán là O(max(n, m)) trong trường hợp đồ thị biểu diễn dưới
dạng danh sách kề, với n là số đỉnh của đồ thị, m là số cạnh của đồ thị.