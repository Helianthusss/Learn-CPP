Thuật toán tham lam (Greedy Algorithm) xây dựng một chiến lược “tham từng
miếng”, miếng dễ tham nhất thường là một giải pháp tối ưu cục bộ nhưng lại luôn có mặt
trong cấu trúc tối ưu toàn cục. Tiếp tục phát triển chiến lược “tham từng miếng” cho các
bước tiếp theo để đạt được kết quả tối ưu toàn cục. Tóm lại, thuật toán tham lam dùng để
giải lớp các baì toán tối ưu thỏa mãn hai điều kiện:
 Ở mỗi bước ta luôn tạo ra một lựa chọn tốt nhất tại thời điểm đó.
 Việc liên kết lại kết quả mỗi bước sẽ cho ta kết quả tối ưu toàn cục.
Tổng quát, thuật toán Greedy bao gồm 5 thành phần chính:
1) Một tập các ứng viên (candidate members) mà giải pháp có thể tham lam.
2) Một hàm lựa chọn (selection fuction) để chọn ứng viên tốt nhất cho giải pháp
tham lam cục bộ.
3) Một hàm thực thi (feasibility function) được sử dụng để quyết định xem một
ứng viên có được dùng để xây dựng lời giải hay không?
4) Một hàm mục tiêu (objective function) dùng để xác định giá trị của lời giải
hoặc một phần của lời giải.
5) Một hàm giải pháp (solution function) dùng để xác định khi nào giải pháp hoàn
chỉnh.
Khi sử dụng giải pháp tham lam, hai thành phần quyết định nhất tới quyết định tham
lam đó là:
Lựa chọn tính chất để tham. Khi chưa tìm được lời giải tối ưu toàn cục nhưng ta
biết chắc chắn một giải pháp tối ưu cục bộ dựa vào tính chất cụ thể của mỗi bài toán. Bài
toán con tiếp theo cũng thực hiện với tính chất như vậy cho đến khi đạt được giải pháp tối
ưu toàn cục.
Lựa chọn cấu trúc con tối ưu. Một bài toán được gọi là "có cấu trúc tối ưu" nếu một
lời giải tối ưu của bài toán con nằm trong lời giải tối ưu của bài toán lớn hơn. Điều này
cho phép ta xác định từng cấu trúc con tối ưu cho mỗi bài toán con, sau đó phát triển các
bài toán con cho đến bài toán con cuối cùng.